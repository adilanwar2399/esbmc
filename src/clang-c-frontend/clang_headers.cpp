#include <clang-c-frontend/clang_c_language.h>
#include <fstream>
#include <ac_config.h>

#ifdef ESBMC_CLANG_HEADER_DIR
#  include <boost/filesystem.hpp>
#else

extern "C"
{
#include <headers/cheaders.h> /* generated by cmake */
#undef ESBMC_FLAIL
}
#endif

void clang_c_languaget::dump_clang_headers(const std::string &tmp_dir)
{
  static bool dumped = false;
  if(dumped)
    return;
  dumped = true;

#ifdef ESBMC_CLANG_HEADER_DIR
  using namespace boost::filesystem;
  path header_dir(ESBMC_CLANG_HEADER_DIR);
  if(!is_directory(header_dir))
  {
    fprintf(
      stderr,
      "error copying clang headers: %s: not a directory\n",
      header_dir.string().c_str());
    abort();
  }
  path tgt(tmp_dir);
  for(const directory_entry &e : directory_iterator(header_dir))
  {
    /* skip everything not looking like a header */
    path p = e.path();
    if(p.extension().string() != ".h")
      continue;
    if(is_regular_file(p))
      copy_file(p, tgt / p.filename());
    else if(is_symlink(p))
      create_symlink(absolute(p), tgt / p.filename());
  }
#else
#define STR(x) #x
#define ESBMC_FLAIL(body, size, ...)                                           \
  std::ofstream(tmp_dir + "/" + STR(__VA_ARGS__)).write(body, size);
#include <headers/cheaders.h>
#undef ESBMC_FLAIL
#endif
}
